@using ErpOnClick.DAL.Models
@using ErpOnClick.ErpMain.Resources
@inject LocService SharedLocalizer

@{
    IList<Emp> empList = Model.empList;
    var empId = Model.empId;
    Emp empDetails = Model.empDetails;
    EmpGosiSettings EmpGosiSettingsDetails = Model.EmpGosiSettingsDetails;
    bool isEdit = (EmpGosiSettingsDetails != null);
}



<form id="frmEdit" role="form" enctype="multipart/form-data">
    <input type="hidden" id="ACTION_TYPE" name="ACTION_TYPE" value="@(isEdit ? "update" : "save")" />
    <input type="hidden" id="GosiSettingsId" name="GosiSettingsId" class="form-control" value="@(EmpGosiSettingsDetails != null ? EmpGosiSettingsDetails.GosiSettingsId : 0)" @(isEdit ? "readonly" : "") min="3" maxlength="3">

    <div class="card card-default card-outline col-lg-12">
        <div class="card-header p-0 border-bottom-0">
            <div class="card" style="background-color: #496b6a">
            </div>
            <ul class="nav nav-tabs" id="custom-content-below-tab" role="tablist">
                @*<li class="nav-item">
                        <a class="nav-link" onclick="navigation('@empId')" href="javascript:void(0)"><i class="fa fa-info"></i> @SharedLocalizer.GetLocalizedHtmlString("General Info")</a>
                    </li>*@

                @Html.Partial("/Areas/HumanResource/Views/Emp/_tabsPartial.cshtml", empDetails)

            </ul>
        </div>
        <div class="card-header">
            <h2 class="card-title">
                @SharedLocalizer.GetLocalizedHtmlString("Gosi Settings Detail")
            </h2>
            <!-- tools box -->
            <div class="card-tools float-right">
                <button type="submit" class="btn  btn-sm btn-primary">
                    <i class="fal fa-save fa-fw"></i> @SharedLocalizer.GetLocalizedHtmlString("Save")
                </button>
            </div>
            <!-- /. tools -->
        </div>
        <div class="card-body">

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Employee")</label>
                        <select id="EmpId" name="EmpId" class="form-control" readonly>

                            @foreach (var item in empList)
                            {
                                <option value="@item.EmpId" @(EmpGosiSettingsDetails != null && EmpGosiSettingsDetails.EmpId == item.EmpId ? "selected" : "")>
                                    @(item.FirstNameEn + " " + item.FatherNameEn + " " + item.GrandNameEn + " " + item.FamilyNameEn)
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Gosi Settings Name En")</label>
                        <input type="text" id="GosiSettingNameEn" name="GosiSettingNameEn" class="form-control" value="@(EmpGosiSettingsDetails!=null?EmpGosiSettingsDetails.GosiSettingNameEn: null)"
                               maxlength="200">
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Gosi Settings Name Er")</label>
                        <input type="text" id="GosiSettingNameAr" name="GosiSettingNameAr" class="form-control" value="@(EmpGosiSettingsDetails!=null?EmpGosiSettingsDetails.GosiSettingNameAr: null)"
                               maxlength="200">
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Joining Date")</label>
                        <input type="text" id="JoiningDate" name="JoiningDate" class="form-control DatePicker" value="@(EmpGosiSettingsDetails != null && EmpGosiSettingsDetails.JoiningDate !=null ? Convert.ToDateTime(EmpGosiSettingsDetails.JoiningDate).ToString("dd-MMM-yyyy") : "")">
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Gosi Code")</label>
                        <input type="text" id="GosiSettingCode" name="GosiSettingCode" class="form-control" value="@(EmpGosiSettingsDetails!=null?EmpGosiSettingsDetails.GosiSettingCode: null)"
                               maxlength="10">
                    </div>
                </div>
            </div>
        </div>

    </div>
</form>


@section scripts{
    <script src="~/lib/jquery-validation/dist/additional-methods.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script>
        var applicationName = getApplicationName();

        $(function () {

            $("#tabGosiSettings-tab").css("background-color", "#496b6a");
            $("#tabGosiSettings-tab").css("color", "white");

        });
        $.validator.setDefaults({
            submitHandler: function (e) {

                submitForm(e);
            }
        });
        $('#frmEdit').validate({
            rules: {
                GosiSettingNameEn: {
                    maxlength: 200
                },
                GosiSettingNameAr: {
                    maxlength: 200
                },
                GosiSettingCode: {
                    maxlength: 10
                }

            },
            messages: {
                GosiSettingNameEn: {
                    maxlength: "Maximum 200 characters can be enetered"
                },
                GosiSettingNameAr: {
                    maxlength: "Maximum 200 characters can be enetered"
                },
                GosiSettingCode: {
                    maxlength: "Maximum 10 characters can be enetered"
                }

            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });
        function submitForm(e) {
            //$('#frmEdit').on('submit', function (e) {
            //  e.preventDefault();
            var actionType = $('#ACTION_TYPE').val();

            confirmAction('Confirm ?', 'Are you sure you want to save changes ?', 'info', 'Yes', 'No').then(function (result) {
                if (result.value == true) {

                    var params = $('#frmEdit').serialize();
                    $.ajax({
                        url: applicationName + "HumanResource/EmpGosiSettings/" + actionType,
                        async: false,
                        type: "POST",
                        data: params,
                        success: function (data) {
                            if (data.result.isError != true) {
                                showMsg('Saved !', 'Record has been saved !', 'success');
                                setTimeout(function () {
                                    window.location = applicationName + 'HumanResource/EmpGosiSettings/emp/@empId';

                                }, 500);
                            }
                            else if (data.result.msg != '') {
                                showMsg('Save Failed !', data.result.msg, 'error');
                            }
                            else {
                                showMsg('Save Failed !', 'Something went wrong. Try again', 'error');
                            }
                        }
                    });
                }
            });




            //});
        }
        function navigation() {
            window.location = applicationName +'HumanResource/emp/edit/@empId'
        };
        //press enter to change input focus
        // register jQuery extension
        jQuery.extend(jQuery.expr[':'], {
            focusable: function (el, index, selector) {
                return $(el).is('a, button, :input, [tabindex]');
            }
        });
        $(document).on('keypress', 'input,select', function (e) {
            if (e.which == 13) {
                e.preventDefault();
                // Get all focusable elements on the page
                var $canfocus = $(':focusable');
                var index = $canfocus.index(document.activeElement) + 1;
                if (index >= $canfocus.length) index = 0;
                $canfocus.eq(index).focus();
            }
        });
        //press enter to change input focus
    </script>

}