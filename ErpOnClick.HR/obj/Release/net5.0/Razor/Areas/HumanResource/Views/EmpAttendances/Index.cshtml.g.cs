#pragma checksum "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "20034ea20e101399ff71ec926606a741741c6a66"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_HumanResource_Views_EmpAttendances_Index), @"mvc.1.0.view", @"/Areas/HumanResource/Views/EmpAttendances/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
using ErpOnClick.DAL.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
using ErpOnClick.ErpMain.Resources;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"20034ea20e101399ff71ec926606a741741c6a66", @"/Areas/HumanResource/Views/EmpAttendances/Index.cshtml")]
    public class Areas_HumanResource_Views_EmpAttendances_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 5 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
  

    DateTime? date = Model.attendanceDate;
    List<EmpAttendance> employeecheck = Model.employeecheck;
    var attendancechek = (employeecheck.Count != 0 ? employeecheck.FirstOrDefault().IsSaved : false);


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("TabName", async() => {
                WriteLiteral("\r\n    Vacant jobs Setup\r\n");
            }
            );
            WriteLiteral(@"<style>


    .text {
        display: inline-block;
        padding: 0.5em 1em;
        min-width: 20em;
        line-height: 1.2em;
        background: #84ceeb;
        position: relative;
    }
</style>
<input type=""hidden"" name=""attendancechek"" id=""attendancechek""");
            BeginWriteAttribute("value", " value=\"", 652, "\"", 675, 1);
#nullable restore
#line 28 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
WriteAttributeValue("", 660, attendancechek, 660, 15, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n\r\n\r\n<div class=\"card card-default card-outline\">\r\n\r\n    <div class=\"card-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <h2 class=\"card-title\">\r\n                    ");
#nullable restore
#line 37 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
               Write(SharedLocalizer.GetLocalizedHtmlString("Emp Attendances"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </h2>\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <input type=\"text\" placeholder=\"Attendance Date\"");
            BeginWriteAttribute("value", " value=\"", 1093, "\"", 1169, 1);
#nullable restore
#line 42 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
WriteAttributeValue("", 1101, date!=null ?Convert.ToDateTime(date).ToString("dd-MMM-yyyy") : "", 1101, 68, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" name=\"AttendanceDate\" id=\"AttendanceDate\" class=\"form-control DatePicker\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <button class=\"btn  btn-sm btn-primary\" onclick=\"getAttendanceByDate()\"><i class=\"fal fa-search\"></i>  ");
#nullable restore
#line 45 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
                                                                                                                  Write(SharedLocalizer.GetLocalizedHtmlString("Search"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</button>\r\n                <button class=\"btn  btn-sm btn-primary\" onclick=\"searchByDate()\"><i class=\"fal fa-file-check\"></i>  ");
#nullable restore
#line 46 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
                                                                                                               Write(SharedLocalizer.GetLocalizedHtmlString("Manual Attendance"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</button>
            </div>


            <!-- tools box -->

            <div class=""col-md-3 text-right "">
                <button id=""importdata"" onclick=""importData()"" type=""button"" class=""btn btn-sm btn-primary"">
                    <i class=""fal fa-file-import ""></i> ");
#nullable restore
#line 54 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
                                                   Write(SharedLocalizer.GetLocalizedHtmlString("Import File"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </button>\r\n                <button onclick=\"saveAttendace()\" ");
#nullable restore
#line 56 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
                                              Write(employeecheck.Count == 0 ? "disabled" : "");

#line default
#line hidden
#nullable disable
            WriteLiteral(" type=\"button\" class=\"btn  btn-sm btn-primary\">\r\n                    <i class=\"fal fa-plus \"></i> ");
#nullable restore
#line 57 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
                                            Write(SharedLocalizer.GetLocalizedHtmlString("Save"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                </button>
           
            </div>

        </div>

        <!-- /. tools -->
    </div>
    <div id=""AttendanceCheck"" style=""display:none;padding-top:10px;padding-bottom:0px;text-align:center;font-weight:600;letter-spacing:1px"">
        <p style=""margin-bottom:-40px"">
            <span class=""text""><strong");
            BeginWriteAttribute("class", " class=\"", 2608, "\"", 2616, 0);
            EndWriteAttribute();
            WriteLiteral(">You did not submit Attendance for this day</strong></span>\r\n        </p>\r\n    </div>\r\n\r\n\r\n    <div class=\"card-body\">\r\n\r\n        <div id=\"divList\"></div>\r\n\r\n    </div>\r\n</div>\r\n\r\n");
#nullable restore
#line 80 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
Write(Html.Partial("/areas/HumanResource/Views/EmpAttendances/_generalModalPartial.cshtml"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(function () {
            BindGrid();

            var attendancechek = $('#attendancechek').val();

            console.log(attendancechek);
            if (attendancechek == false) {
                $('#AttendanceCheck').show();

            }
        });
        var applicationName = getApplicationName();

        function getEmployees() {
            var attendaceDate = $('#AttendanceDate').val();

            $.ajax({
                url: applicationName + ""HumanResource/EmpAttendances/GetEmployees"",
                async: false,
                type: ""POST"",
                data: { date: attendaceDate },
                success: function (data) {
                    window.location = applicationName + 'HumanResource/EmpAttendances?attendanceDate=' + attendaceDate;
                }
            });
        };
        function searchByDate() {
            //var date = $('#AttendanceDate').val();
            var attendaceDate = $('#AttendanceDate').val(");
                WriteLiteral(@");

            //if (date == """") {
            if (attendaceDate == """") {
                showMsg('Enter !', '!Date First');
            }
            else {

                $.ajax({
                    url: applicationName + ""HumanResource/EmpAttendances/GetEmployees"",
                    async: false,
                    type: ""POST"",
                    data: { date: attendaceDate },
                    success: function (data) {
                        window.location = applicationName + 'HumanResource/EmpAttendances?attendanceDate=' + attendaceDate;
                    }
                });

                //    BindGrid(date);
            }


        }

        function getAttendanceByDate() {
            //var date = $('#AttendanceDate').val();
            var attendaceDate = $('#AttendanceDate').val();

            //if (date == """") {
            if (attendaceDate == """") {
                showMsg('Enter !', '!Date First');
            }
            else {

        ");
                WriteLiteral(@"        $.ajax({
                    url: applicationName + ""HumanResource/EmpAttendances/GetAttendanceBydate"",
                    async: false,
                    type: ""POST"",
                    data: { date: attendaceDate },
                    success: function (data) {
                        $('#divList').html(data);
                    }
                });

                //    BindGrid(date);
            }


        }

        function BindGrid(date) {
            date = (date == null ? $('#AttendanceDate').val() : date);
            $('#divList').html('<h5 class=""margin-0""><p><i class=""fa fa-spinner fa-spin fa-fw""></i> Please wait while data is loading...</p></h5>');
            $.ajax({
                url: applicationName + 'HumanResource/empattendances/_list',
                data: { date: date },
                success: function (data) {
                    $('#divList').html(data);
                }
            })
        };


        function saveAttendace() {");
                WriteLiteral(@"
            confirmAction('Confirm ?', 'Are you sure you want to save changes ?', 'info', 'Yes', 'No').then(function (result) {
                if (result.value == true) {


                    var empAttendancesList = new Array();

                    $(""#dtList tbody TR"").each(function () {

                        var row = $(this);
                        var EmpAttendance = {};

                        if (row.find(""#AllowanceTypeId"").val() != """") {

                            var IsPresent = ""IsPaidLeave-"" + row.find('#EmpId').val();
                            console.log(row.find(""#IsPresent"").is(':checked'));
                            console.log(row.find(""#IsPaidLeave"").is(':checked'));
                            console.log(row.find(""#IsUnpaidLeave"").is(':checked'));
                            console.log(row.find(""#IsShortLeave"").is(':checked'));
                            EmpAttendance.EmpAttendanceId = parseInt(row.find(""#EmpAttendanceId"").val());
                     ");
                WriteLiteral(@"       EmpAttendance.EmpId = parseInt(row.find('#EmpId').val());
                            EmpAttendance.AttendanceDate = ($(""#AttendanceDate"").val() == """" ? null : $(""#AttendanceDate"").val());
                            EmpAttendance.CreatedDate = ($(""#CreatedDate"").val() == """" ? null : $(""#CreatedDate"").val());
                            EmpAttendance.TimeIn = (row.find(""#TimeIn"").val() == """" ? null : row.find(""#TimeIn"").val());
                            EmpAttendance.Note = (row.find(""#Note"").val() == """" ? null : row.find(""#Note"").val());
                            EmpAttendance.TimeOut = (row.find(""#TimeOut"").val());
                            EmpAttendance.IsPresent = (row.find(""#IsPresent"").is(':checked') == true ? true : false);
                            EmpAttendance.IsPaidLeave = (row.find(""#IsPaidLeave"").is(':checked') == true ? true : false);
                            EmpAttendance.IsUnpaidLeave = (row.find(""#IsUnpaidLeave"").is(':checked') == true ? true : false);
             ");
                WriteLiteral(@"               EmpAttendance.IsShortLeave = (row.find(""#IsShortLeave"").is(':checked') == true ? true : false);

                            empAttendancesList.push(EmpAttendance);
                        }


                    });
                    var attendaceDate = $('#AttendanceDate').val();
                    $.ajax({
                        url: applicationName + ""HumanResource/EmpAttendances/save"",
                        data: { postedData: empAttendancesList },
                        async: false,
                        type: 'POST',

                        success: function (data) {

                            if (data.monthcheck == 1) {
                                showMsg('Failed !', 'Kindly mark the current month attendance !', 'error');

                            }
                            else {
                                if (data.result.isError != true) {
                                    showMsg('Saved !', 'Record has been saved !', 'success');
  ");
                WriteLiteral(@"                                  setTimeout(function () {
                                        window.location = applicationName + 'HumanResource/EmpAttendances?attendanceDate=' + attendaceDate;
                                    }, 500);
                                }
                                else if (data.result.msg != '') {
                                    showMsg('Save Failed !', data.result.msg, 'error');
                                }
                                else {
                                    showMsg('Save Failed !', 'Something went wrong. Try again', 'error');
                                }
                            }
                        }
                    });
                }
            });

        }

        function importData() {
            $('#importdataModal').modal('show');
        }

        $('#formimportV').submit(function (e) {
            e.preventDefault();
            debugger;
            var ext = $('#AttendanceF");
                WriteLiteral(@"ile').val().split('.').pop().toLowerCase();
            if (!(ext == ""xlsx"" || ext == ""xls"" || ext == ""csv"")) {
                document.getElementById(this.id).value = """";
                showMsg(""Invalid File Type !"", ""You may only upload Excel files. Please ensure your file is in one of these formats."", ""error"");
                isValidated = false;
            }
            else {
                var file = $(""#AttendanceFile"")[0].files[0];
                var reader = new FileReader();
                var excelData = [];
                var ImportData = Array();
                var _ImportData = {};
                var count = 0;
                var check = false;
                reader.onload = function (event) {
                    var data = event.target.result;
                    var workbook = XLSX.read(data, {
                        type: 'binary'
                    });

                    workbook.SheetNames.forEach(function (sheetName) {

                        // Here is your object
       ");
                WriteLiteral(@"                 if (sheetName == ""Sheet1"") {

                            var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                            var row = """";
                            var ImportData = new Array();
                            $.each(XL_row_object, function (key, value) {

                                var DataRows = {};
                                DataRows.In = value.In;
                                DataRows.Out = value.Out;
                                ImportData.push(DataRows);
                                count = count + 1;
                                if (count == XL_row_object.length) {
                                    check = true;
                                }
                            });
                            var Data = {

                                IData: ImportData
                            };

                            if (check == true) {
                                sendData(Data);
       ");
                WriteLiteral(@"                     }
                        }
                        else {

                        }
                    });
                };

                reader.onerror = function (ex) {
                    console.log(ex);
                };

                reader.readAsBinaryString(file);
            }
        });

        function sendData(Data) {

            $('#formimportV').find('#formsubmit').html('<i class=""fa fa-spinner fa-spin fa-fw""></i> Please Wait, While Your Data is Importing...');
            $('#formimportV').find('#formsubmit').prop(""disabled"", true);
            var params = $('#formimportV').serialize();
            var formEl = document.forms.formimportV;
            var formData = new FormData(formEl);
            $.ajax({
                url: getApplicationName() + ""HumanResource/EmpAttendances/ImportData"",
                type: 'POST',
                cache: false,
                contentType: false,
                processData: false,
                data: formData ? f");
                WriteLiteral(@"ormData : params,
                success: function (data) {

                    if (data.result.isError == false) {
                        setTimeout(function () {
                            showMsg('Data Imported !', 'Data has been Imported !', 'success');
                            window.location.href = getApplicationName() + 'HumanResource/EmpAttendances';

                        }, 1000);
                        $('#formimportV').find('#formsubmit').html('<i class=""fa fa-paperclip fa-fw""></i> Upload Now');
                        $('#formimportV').find('#formsubmit').prop(""disabled"", false);
                    }
                    else if (data.result.isError == true) {
                        setTimeout(function () {
                            showMsg('Error !', data.result.msg, 'error');

                        }, 1000);
                        $('#formimportV').find('#formsubmit').html('<i class=""fa fa-paperclip fa-fw""></i> Upload Now');
                        $('#formimportV').find('#forms");
                WriteLiteral(@"ubmit').prop(""disabled"", false);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus, errorThrown);
                }
            });
        }

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public LocService SharedLocalizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
